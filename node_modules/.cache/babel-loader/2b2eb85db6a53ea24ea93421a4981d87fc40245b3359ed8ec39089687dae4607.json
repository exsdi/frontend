{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Documents/cs/randomWebsite/frontend/src/pages/Home.js\";\nimport { useEffect, useState } from 'react';\n\n// we create a state to update the local state\n//using setWorkouts and the value of it is the array of data\n//json from fetchWorkouts.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [workouts, setWorkouts] = useState(null);\nuseEffect(() => {\n  const fetchWorkouts = async () => {\n    // will fetch the workouts from the backend API and store them in response\n    const response = await fetch('/api/workouts');\n    const json = await response.json();\n\n    // the ok property is used to check if the response is ok or not\n    if (response.ok) {\n      //the reason its an array is because in the backend API\n      //workoutController.js we store them in workouts.\n      // and res.json(workouts), workouts is an array of objects\n      setWorkouts(json);\n    }\n  };\n  fetchWorkouts();\n}, []);\n// empty array will make it so it only runs once when the \n// component is loaded. it does not fetch every time the \n// component is loaded.\n\nconst Home = () => {\n  return (\n    /*#__PURE__*/\n    //only if workouts has a value will it start to map\n    _jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workouts\",\n        children: workouts && workouts.map(workout => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: workout.title\n        }, workout._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","workouts","setWorkouts","fetchWorkouts","response","fetch","json","ok","Home","className","children","map","workout","title","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jesus/Documents/cs/randomWebsite/frontend/src/pages/Home.js"],"sourcesContent":["import { useEffect, useState } from'react';\n\n// we create a state to update the local state\n//using setWorkouts and the value of it is the array of data\n//json from fetchWorkouts.\nconst [workouts, setWorkouts] = useState(null);\n\n\nuseEffect (() => {\n    const fetchWorkouts = async () => {\n        // will fetch the workouts from the backend API and store them in response\n        const response = await fetch('/api/workouts');\n        const json = await response.json();\n\n        // the ok property is used to check if the response is ok or not\n        if (response.ok) {\n            //the reason its an array is because in the backend API\n            //workoutController.js we store them in workouts.\n            // and res.json(workouts), workouts is an array of objects\n            setWorkouts(json);\n        }\n    }\n\n    fetchWorkouts();\n}, []);\n// empty array will make it so it only runs once when the \n// component is loaded. it does not fetch every time the \n// component is loaded.\n\nconst Home = () => {\n    return (\n        //only if workouts has a value will it start to map\n        <div className=\"home\">\n            <div className=\"workouts\">\n                {workouts && workouts.map((workout) => (\n                    <p key={workout._id}>{workout.title}</p>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAE1C;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;AAG9CD,SAAS,CAAE,MAAM;EACb,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;IAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;;IAElC;IACA,IAAIF,QAAQ,CAACG,EAAE,EAAE;MACb;MACA;MACA;MACAL,WAAW,CAACI,IAAI,CAAC;IACrB;EACJ,CAAC;EAEDH,aAAa,CAAC,CAAC;AACnB,CAAC,EAAE,EAAE,CAAC;AACN;AACA;AACA;;AAEA,MAAMK,IAAI,GAAGA,CAAA,KAAM;EACf;IAAA;IACI;IACAR,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBV,OAAA;QAAKS,SAAS,EAAC,UAAU;QAAAC,QAAA,EACpBT,QAAQ,IAAIA,QAAQ,CAACU,GAAG,CAAEC,OAAO,iBAC9BZ,OAAA;UAAAU,QAAA,EAAsBE,OAAO,CAACC;QAAK,GAA3BD,OAAO,CAACE,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEd,CAAC;AAAAC,EAAA,GAXKX,IAAI;AAaV,eAAeA,IAAI;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}