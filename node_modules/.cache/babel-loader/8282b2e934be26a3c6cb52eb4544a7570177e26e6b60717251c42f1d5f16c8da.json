{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Documents/cs/randomWebsite/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // we create a state to update the local state\n  //using setWorkouts and the value of it is the array of data\n  //json from fetchWorkouts.\n  const [workouts, setWorkouts] = useState(null);\n  useEffect(() => {\n    const fetchWorkouts = async () => {\n      // will fetch the workouts from the backend API and store them in response\n      const response = await fetch('/api/workouts');\n      const json = await response.json();\n\n      // the ok property is used to check if the response is ok or not\n      if (response.ok) {\n        //the reason its an array is because in the backend API\n        //workoutController.js we store them in workouts.\n        // and res.json(workouts), workouts is an array of objects\n        setWorkouts(json);\n      }\n    };\n    fetchWorkouts();\n  }, []);\n  // empty array will make it so it only runs once when the \n  // component is loaded. it does not fetch every time the \n  // component is loaded.\n\n  return (\n    /*#__PURE__*/\n    //only if workouts has a value will it start to map\n    _jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workouts\",\n        children: workouts && workouts.map(workout => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: workout.title\n        }, workout._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Home, \"1xqH4eSw0xb4A/svJ4ssCC9OGT4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Home","_s","workouts","setWorkouts","fetchWorkouts","response","fetch","json","ok","className","children","map","workout","title","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jesus/Documents/cs/randomWebsite/frontend/src/pages/Home.js"],"sourcesContent":["import { useEffect, useState } from'react';\n\nconst Home = () => {\n\n    // we create a state to update the local state\n//using setWorkouts and the value of it is the array of data\n//json from fetchWorkouts.\nconst [workouts, setWorkouts] = useState(null);\n\n\nuseEffect (() => {\n    const fetchWorkouts = async () => {\n        // will fetch the workouts from the backend API and store them in response\n        const response = await fetch('/api/workouts');\n        const json = await response.json();\n\n        // the ok property is used to check if the response is ok or not\n        if (response.ok) {\n            //the reason its an array is because in the backend API\n            //workoutController.js we store them in workouts.\n            // and res.json(workouts), workouts is an array of objects\n            setWorkouts(json);\n        }\n    }\n\n    fetchWorkouts();\n}, []);\n// empty array will make it so it only runs once when the \n// component is loaded. it does not fetch every time the \n// component is loaded.\n\n    return (\n        //only if workouts has a value will it start to map\n        <div className=\"home\">\n            <div className=\"workouts\">\n                {workouts && workouts.map((workout) => (\n                    <p key={workout._id}>{workout.title}</p>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf;EACJ;EACA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAG9CD,SAAS,CAAE,MAAM;IACb,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;;MAElC;MACA,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACb;QACA;QACA;QACAL,WAAW,CAACI,IAAI,CAAC;MACrB;IACJ,CAAC;IAEDH,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA;;EAEI;IAAA;IACI;IACAL,OAAA;MAAKU,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBX,OAAA;QAAKU,SAAS,EAAC,UAAU;QAAAC,QAAA,EACpBR,QAAQ,IAAIA,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBAC9Bb,OAAA;UAAAW,QAAA,EAAsBE,OAAO,CAACC;QAAK,GAA3BD,OAAO,CAACE,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEd,CAAC;AAAAjB,EAAA,CAvCKD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}