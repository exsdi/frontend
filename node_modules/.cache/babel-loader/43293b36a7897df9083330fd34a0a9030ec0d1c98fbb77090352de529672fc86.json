{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Documents/cs/randomWebsite/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useWorkoutsContext } from '../hooks/useWorkoutsContext';\nimport { WorkoutsReducer } from '../context/WorkoutContext';\n// after creating hooks we no longer need useState\n\nimport WorkoutDetails from '../components/WorkoutDetails';\nimport WorkoutForm from '../components/WorkoutForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // we create a state to update the local state\n  //using setWorkouts and the value of it is the array of data\n  //json from fetchWorkouts.\n  // const [workouts, setWorkouts] = useState(null);\n  const {\n    workouts,\n    dispactch\n  } = useWorkoutsContext();\n  useEffect(() => {\n    const fetchWorkouts = async () => {\n      // will fetch the workouts from the backend API and store them in response\n      //you don't have to explicitly pass local host 4000 because it is\n      // being passed in the package.json file as proxy.\n      const response = await fetch('/api/workouts');\n      const json = await response.json();\n\n      // the ok property is used to check if the response is ok or not\n      if (response.ok) {\n        //the reason its an array is because in the backend API\n        //workoutController.js we store them in workouts.\n        // and res.json(workouts), workouts is an array of objects\n        // setWorkouts(json);\n        dispactch({\n          type: 'SET_WORKOUTS',\n          payload: json\n        });\n      }\n    };\n    fetchWorkouts();\n  }, []);\n  // empty array will make it so it only runs once when the \n  // component is loaded. it does not fetch every time the \n  // component is loaded.\n\n  return (\n    /*#__PURE__*/\n    //only if workouts has a value will it start to map\n    _jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workouts\",\n        children: workouts && workouts.map(workout => /*#__PURE__*/_jsxDEV(WorkoutDetails, {\n          workout: workout\n        }, workout._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(WorkoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Home, \"bgLl8aGXiFHCSzUdWq3jlUSILYk=\", false, function () {\n  return [useWorkoutsContext];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useWorkoutsContext","WorkoutsReducer","WorkoutDetails","WorkoutForm","jsxDEV","_jsxDEV","Home","_s","workouts","dispactch","fetchWorkouts","response","fetch","json","ok","type","payload","className","children","map","workout","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jesus/Documents/cs/randomWebsite/frontend/src/pages/Home.js"],"sourcesContent":["import { useEffect, useState } from'react';\nimport { useWorkoutsContext } from '../hooks/useWorkoutsContext';\nimport { WorkoutsReducer } from '../context/WorkoutContext';\n// after creating hooks we no longer need useState\n\nimport WorkoutDetails from '../components/WorkoutDetails';\nimport WorkoutForm from '../components/WorkoutForm';\n\nconst Home = () => {\n\n    // we create a state to update the local state\n//using setWorkouts and the value of it is the array of data\n//json from fetchWorkouts.\n// const [workouts, setWorkouts] = useState(null);\nconst { workouts, dispactch } = useWorkoutsContext();\n\nuseEffect (() => {\n    const fetchWorkouts = async () => {\n        // will fetch the workouts from the backend API and store them in response\n        //you don't have to explicitly pass local host 4000 because it is\n        // being passed in the package.json file as proxy.\n        const response = await fetch('/api/workouts');\n        const json = await response.json();\n\n        // the ok property is used to check if the response is ok or not\n        if (response.ok) {\n            //the reason its an array is because in the backend API\n            //workoutController.js we store them in workouts.\n            // and res.json(workouts), workouts is an array of objects\n            // setWorkouts(json);\n            dispactch({type: 'SET_WORKOUTS', payload: json});\n        }\n    }\n\n    fetchWorkouts();\n}, []);\n// empty array will make it so it only runs once when the \n// component is loaded. it does not fetch every time the \n// component is loaded.\n\n    return (\n        //only if workouts has a value will it start to map\n        <div className=\"home\">\n            <div className=\"workouts\">\n                {workouts && workouts.map((workout) => (\n                    <WorkoutDetails key={workout._id} workout={workout} />\n                ))}\n            </div>\n            <WorkoutForm />\n        </div>\n    )\n}\n\nexport default Home;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC1C,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,eAAe,QAAQ,2BAA2B;AAC3D;;AAEA,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf;EACJ;EACA;EACA;EACA,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGT,kBAAkB,CAAC,CAAC;EAEpDF,SAAS,CAAE,MAAM;IACb,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B;MACA;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;;MAElC;MACA,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACb;QACA;QACA;QACA;QACAL,SAAS,CAAC;UAACM,IAAI,EAAE,cAAc;UAAEC,OAAO,EAAEH;QAAI,CAAC,CAAC;MACpD;IACJ,CAAC;IAEDH,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA;;EAEI;IAAA;IACI;IACAL,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBb,OAAA;QAAKY,SAAS,EAAC,UAAU;QAAAC,QAAA,EACpBV,QAAQ,IAAIA,QAAQ,CAACW,GAAG,CAAEC,OAAO,iBAC9Bf,OAAA,CAACH,cAAc;UAAmBkB,OAAO,EAAEA;QAAQ,GAA9BA,OAAO,CAACC,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CACxD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNpB,OAAA,CAACF,WAAW;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;AAEd,CAAC;AAAAlB,EAAA,CA3CKD,IAAI;EAAA,QAMsBN,kBAAkB;AAAA;AAAA0B,EAAA,GAN5CpB,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}